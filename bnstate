#/bin/bash
#mis locationi annab mac $1 tabelist monitor.controller?
TOUT=2000 # timeout sqlite jaoks
tsnow=`date +%s` # anname ajamargid praguse hetke suhtes, et kui vana saadud info on

otsialias() {  # parameetriks $MAC
  # alias mac on see kuhu suunatakse - aga suunab nagiosele! nii et siin ara tegele aliastega!
    cmd2="select mac, comment from alias where aliasmac='${1}';"
    MAC2=`echo -e ".timeout ${TOUT}\n${cmd2}" | sqlite3 /srv/scada/sqlite/nagiosele | cut -d"|" -f1`
    echo $MAC2
}



otsimac() {  # otsime mac alusel state infot greppides voimaliku lisaparameetri alusel ###################
cmd="select state.mac,controller.location,state.register,state.value,$tsnow-state.timestamp from state left join controller on state.mac=controller.mac where state.mac='${1}';"

echo -e ".timeout ${TOUT}\n${cmd}" | sqlite3 /srv/scada/sqlite/monitor | grep "${2}"
}



otsireg() { # otsime registri alusel state infot greppides voimaliku lisaparameetri alusel #################
#cmd="select state.mac,controller.location,state.register,state.value,$tsnow-state.timestamp from state left join controller on state.mac=controller.mac where state.register='${1}';"
cmd="select state.mac,controller.location,state.register,state.value,$tsnow-state.timestamp from state left join controller on state.mac=controller.mac where state.register='${1}';"

echo -e ".timeout ${TOUT}\n${cmd}" | sqlite3 /srv/scada/sqlite/monitor | grep "${2}"
}




aliasreg() { # otsime aliase sama registrit ############################
#s seda on parem mitte kasutada, aliaste kasutamine algab peale state registreid! bagiosele protsessis
cmd="select state.mac,controller.location,state.register,state.value,$tsnow-state.timestamp from state left join controller on state.mac=controller.mac where state.mac='${1}' and state.register='${2}';"

echo -e ".timeout ${TOUT}\n${cmd}" | sqlite3 /srv/scada/sqlite/monitor | grep "${3}"
}


##### MAIN ########

if [ "$1" = "" ]; then
    echo anna mac voi register parameetriks; exit 1
else
    PAR1=$1
fi

if [ "$2" = "" ]; then
    PAR2=""
else
    PAR2=$2
fi

#echo PAR1 $PAR1 PAR2 $PAR2
#koigepealt katsetame mac alusel    

LIST=`otsimac $PAR1 $PAR2`
#echo MACLIST "${LIST}"

for MAC in `echo -e "${LIST}" | cut -d"|" -f1`
do
   #echo otsialias $MAC...  EI tegele aliastega! nagiosele suunamise teema!
   #MAC2LIST=`otsialias $MAC`
   #if [ ! "$MAC2LIST" = "" ]; then
      #echo $MAC # mon host millele jrgneb aliaste loetelu koos reg infoga
      #for MAC2 in `echo "${MAC2LIST}"`
      #do
         #echo "  ${MAC2}"
       #  echo -n "  "; otsimac $MAC2 $PAR2 # aliaste read
      #done
   #else
       echo -e "${LIST}" | grep $MAC  #  mon host rida koos reg infoga
   #fi
done

#siis katsetame registri alusel

LIST=`otsireg $PAR1 $PAR2`
#echo REGLIST "${LIST}"
for MAC in `echo -e "${LIST}" | cut -d"|" -f1`
do
   #echo otsialias $MAC...
   #MAC2LIST=`otsialias $MAC`
   #if [ ! "$MAC2LIST" = "" ]; then
      #echo "monitooringus oleva hosti ${MAC} info saabub:"  # mon host, millele jargneb aliaste loetelu koos reg infoga
    #  echo $MAC
    #  for MAC2 in `echo "${MAC2LIST}"`
    #  do
         #echo -n "  ${MAC2}"
     #    echo -n "  ";  aliasreg $MAC2 $PAR1 $PAR2
     # done
   #else
      echo -e "${LIST}" | grep $MAC  #  mon host rida koos reg infoga
   #fi

done


# toimib nii mac kui registri alusel - see variant, mis midagi ei anna, on tyhi ja muud polegi vaja...
# lisame tulemusse ka aliased kui neid on
